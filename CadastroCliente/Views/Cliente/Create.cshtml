@model CadastroCliente.ViewModel.CadastroCliViewModel

@{
    ViewBag.Title = "Create";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="container">
        <div class="card card-register mx-auto mt-5">
            <div class="card-header text-center"><h5>Dados pessoais</h5></div>
            <div class="card-body">
                <div>

                </div>
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Cliente.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Cliente.Nome, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Cliente.Nome, "", new { @class = "text-danger" })

                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Cliente.Sexo, "Gênero", htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-10">
                        @Html.EnumDropDownListFor(model => model.Cliente.Sexo, htmlAttributes: new { @class = "form-control col-md-4", required = "required" })
                        @Html.ValidationMessageFor(model => model.Cliente.Sexo, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Cliente.DataNascimento, "Data-Nascimento", htmlAttributes: new { @class = "control-label col-md-5" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Cliente.DataNascimento, new { htmlAttributes = new { @class = "form-control col-md-5", placeholder = "DD/MM/AAAA", id = "datanascimento", OnBlur = "verificarDataNascimento(datanascimento.value)" } })
                        @Html.ValidationMessageFor(model => model.Cliente.DataNascimento, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
    </div>
    @*================================================>ENDEREÇO<=======================================================================*@

    <div class="card card-register mx-auto mt-5 ">
        <div class="card-header text-center"><h5>Dados do endereço</h5></div>
        <div class="card-body">
            <label for="cep" style="margin-left: 16px">CEP</label>
            <div class="input-group mb-3">
                @Html.EditorFor(model => model.Endereco.CEP, new { htmlAttributes = new { @class = "form-control control-label col-md-5", placeholder = "Apenas números", id = "cep", style = "margin-left:16px", type = "search", maxlength = "8", pattern = "[0-9]+$" } })
                <div class="input-group-append">
                    <button class="btn btn-outline-primary" type="button" onclick="buscarcep(cep.value)">Pesquisar</button>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Endereco.Logradouro, "Logradouro", htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Endereco.Logradouro, new { htmlAttributes = new { @class = "form-control", id = "logradouro" } })
                    @Html.ValidationMessageFor(model => model.Endereco.Logradouro, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Endereco.Numero, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Endereco.Numero, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Endereco.Numero, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Endereco.Complemento, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Endereco.Complemento, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Endereco.Complemento, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Endereco.Bairro, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Endereco.Bairro, new { htmlAttributes = new { @class = "form-control", id = "bairro" } })
                    @Html.ValidationMessageFor(model => model.Endereco.Bairro, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Endereco.Cidade, "Municipio", htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Endereco.Cidade, new { htmlAttributes = new { @class = "form-control", id = "cidade" } })
                    @Html.ValidationMessageFor(model => model.Endereco.Cidade, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Endereco.Estado, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Endereco.Estado, new { htmlAttributes = new { @class = "form-control", id = "estado" } })
                    @Html.ValidationMessageFor(model => model.Endereco.Estado, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Cadastrar" class="btn btn-primary btn-block" />
                </div>
            </div>
        </div>
    </div>

}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Content/js/buscacep.js"></script>,
    <script type="text/javascript">
        function verificarDataNascimento(date) {
            if (date != null && date != "") {
                var dataInformada = formatarData(date, 'pt-br');
                let partes = dataInformada.split('/')
                let dataAtual = new Date()

                dataInformada = new Date(partes[2], partes[1] - 1, partes[0])

                if (dataInformada > dataAtual) {
                    document.getElementById('datanascimento').value = ("");
                    alert("A data de nascimento não pode ser maior que a data atual.");
                }
            }
        }

        function formatarData(data, formato) {
            if (formato == 'pt-br') {
                return (data.substr(0, 10).split('-').reverse().join('/'));
            } else {
                return (data.substr(0, 10).split('/').reverse().join('-'));
            }
        }
    </script>
}
